name: Continous integration

on:
  pull_request:
  push:
    branches:
      - develop
      - main
    tags:
      - "*"


jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Set up Python 3.6
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.6
      - name: Install tox
        run: pip install tox
      - name: Lint
        run: tox -e lint
  docs:
    needs: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Set up Python 3.6
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.6
      - name: Install isal
        run: sudo apt-get install libisal-dev
      - name: Install tox and upgrade setuptools and pip
        run: pip install --upgrade tox setuptools pip
      - name: Build docs
        run: tox -e docs
        env:
          PYTHON_ISAL_LINK_DYNAMIC: True
  twine_check:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
          - 3.6
        os: ["ubuntu-latest" ]
    steps:
      - uses: actions/checkout@v2.3.4
        with:
         submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build dependencies (Linux)  # Yasm in pypa/manylinux images.
        run: sudo apt install yasm
        if: runner.os == 'Linux'
      - name: Install build dependencies (Macos)
        run: brew install yasm automake autoconf
        if: runner.os == 'macOS'
      - name: Install twine, cython wheel and upgrade setuptools
        run: pip install --upgrade twine cython wheel setuptools
      - name: create dists
        run: python setup.py sdist bdist_wheel
      - name: check dists
        run: twine check dist/*

  test-static:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        os: ["ubuntu-latest"]
        include:
          - os: "macos-latest"
            python-version: 3.8
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox and upgrade setuptools
        run: pip install --upgrade tox setuptools
      - name: Install build dependencies (Linux)  # Yasm in pypa/manylinux images.
        run: sudo apt install yasm
        if: runner.os == 'Linux'
      - name: Install build dependencies (Macos)
        run: brew install yasm automake autoconf
        if: runner.os == 'macOS'
      - name: Run tests
        run: tox -e py3
      - name: Upload coverage report
        uses: codecov/codecov-action@v1

  test-dynamic:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        python-version:
          - 3.6
        os: ["ubuntu-20.04"]
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install isal
        run: sudo apt-get install libisal-dev
      - name: Install tox and upgrade setuptools and pip
        run: pip install --upgrade tox setuptools pip
      - name: Run tests (dynamic link)
        run: tox -e py3
        env:
          PYTHON_ISAL_LINK_DYNAMIC: True

  deploy:
    #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    needs: [lint, docs, test-static, test-dynamic, twine_check]
    #if: startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        os: [ "macos-latest", "ubuntu-latest" ]
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        name: Install Python
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.8.0
      - name: Install build dependencies (Macos)
        run: brew install yasm automake autoconf
        if: runner.os == 'macOS'
      - name: Build wheels
        run: cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp3{6,7,8,9}-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686"  # Skip 32 bit.
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
          # Below command fails when data is not correctly statically linked
          # Full tests not needed: these are done prior to building.
          CIBW_TEST_COMMAND: "python -c 'from isal import isal_zlib, igzip; isal_zlib.adler32(b\"bla\")'"
      - name: Build sdist
        if: "runner.os == 'Linux'"
        run: python setup.py sdist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        # Alpha, Beta and dev releases contain a - in the tag.
        if: contains(github.ref, '-') && startsWith(github.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: "!contains(github.ref, '-') && startsWith(github.ref, 'refs/tags')"
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}